@model TicketViewModel

@{
    ViewData["Title"] = "Create Ticket";
    ViewData["BreadCrum"] = "Create Ticket";
}
<div class="card">
    <div class="card-header p-lg-5">
        <h1>Create Ticket</h1>
    </div>
    <div class="card-body p-lg-17">
        <form id="ticketForm" asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row g-9 mb-8">
                <div class="col-md-6 fv-row">
                    <label asp-for="FullName" class="required fs-6 fw-semibold mb-2"></label>
                    <input asp-for="FullName" class="form-control form-control-solid" placeholder="Full Name" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
                <div class="col-md-6 fv-row">
                    <label asp-for="Phone" class="required fs-6 fw-semibold mb-2"></label>
                    <input asp-for="Phone" class="form-control form-control-solid" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
            </div>
            <div class="row g-9 mb-8">
                <div class="col-md-6 fv-row">
                    <label asp-for="IssueType" class="required fs-6 fw-semibold mb-2"></label>
                    <select asp-for="IssueType" class="form-select form-select-solid" asp-items="ViewBag.IssueTypes"></select>
                    <span asp-validation-for="IssueType" class="text-danger"></span>
                </div>
                <div class="col-md-6 fv-row">
                    <label asp-for="Priority" class="required fs-6 fw-semibold mb-2"></label>
                    <select asp-for="Priority" class="form-select form-select-solid" asp-items="ViewBag.Priority"></select>
                    <span asp-validation-for="Priority" class="text-danger"></span>
                </div>
            </div>
            <div class="d-flex flex-column mb-8 fv-row">
                <label asp-for="Description" class="fs-6 fw-semibold mb-2"></label>
                <textarea asp-for="Description" class="form-control form-control-solid" rows="4" placeholder="Type your ticket description"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="fv-row mb-8">
                <label class="fs-6 fw-semibold mb-2">Attachments</label>
                <div class="dropzone" id="kt_modal_create_ticket_attachments">
                    <div class="dz-message needsclick align-items-center">
                        <i class="ki-duotone ki-file-up fs-3hx text-primary"></i>
                        <div class="ms-4">
                            <h3 class="fs-5 fw-bold text-gray-900 mb-1">Drop files here or click to upload.</h3>
                            <span class="fw-semibold fs-7 text-gray-400">Upload up to 10 files</span>
                        </div>
                    </div>
                </div>
                <input type="file" name="Attachment" id="hiddenAttachment" multiple style="display:none" />
                <span asp-validation-for="Attachment" class="text-danger"></span>
            </div>
            <div class="text-center">
                <a asp-action="Index" type="reset" id="kt_modal_new_ticket_cancel" class="btn btn-light me-3">Cancel</a>
                <button type="submit" id="kt_modal_new_ticket_submit" class="btn btn-primary">
                    <span class="indicator-label">Submit</span>
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var myDropzone = new Dropzone("#kt_modal_create_ticket_attachments", {
            url: '/Ticket/Upload',
            autoProcessQueue: false,
            maxFilesize: 5,
            maxFiles: 10,
            acceptedFiles: ".jpg,.jpeg,.png,.gif,.pdf,.doc,.docx",
            init: function () {
                this.on("addedfile", function (file) {
                    var deleteButton = Dropzone.createElement("<button class='btn btn-danger btn-sm dz-remove'>Remove</button>");

                    deleteButton.addEventListener("click", function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        this.removeFile(file);

                        var hiddenInput = document.getElementById("hiddenAttachment");
                        var dataTransfer = new DataTransfer();

                        Array.from(hiddenInput.files).forEach(function (existingFile) {
                            if (existingFile.name !== file.name) {
                                dataTransfer.items.add(existingFile);
                            }
                        });

                        hiddenInput.files = dataTransfer.files;
                    }.bind(this));

                    file.previewElement.appendChild(deleteButton);

                    var hiddenInput = document.getElementById("hiddenAttachment");
                    var dataTransfer = new DataTransfer();

                    Array.from(hiddenInput.files).forEach(function (existingFile) {
                        dataTransfer.items.add(existingFile);
                    });

                    dataTransfer.items.add(file);
                    hiddenInput.files = dataTransfer.files;
                });

                this.on("removedfile", function (file) {
                    var hiddenInput = document.getElementById("hiddenAttachment");
                    var dataTransfer = new DataTransfer();

                    Array.from(hiddenInput.files).forEach(function (existingFile) {
                        if (existingFile.name !== file.name) {
                            dataTransfer.items.add(existingFile);
                        }
                    });

                    hiddenInput.files = dataTransfer.files;
                });
            }
        });
    });
</script>